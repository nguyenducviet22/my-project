package test;

import java.util.List;
import java.util.Locale.Category;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.query.Query;

import daoAPI.ProductDaoAPI;
import model.Product;
import util.HibernateUtil;

public class Test {

	public static void main(String[] args) {
		ProductDaoAPI proDao = new ProductDaoAPI();

//		List<Product> list = proDao.selectAll();
//		for (Product product : list) {
//			System.out.println(product);
//		}
//		
//		Object[] obj = proDao.selectMaxMinPriceAllProduct();
//		System.out.println("Amount: " + obj[0]);
//		System.out.println("The highest price: " + obj[1]);
//		System.out.println("The lowest price: " + obj[2]);

		List<Object[]> listObj = null;
		SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
		try {
			if (sessionFactory != null) {
				Session session = sessionFactory.openSession();
				CriteriaBuilder builder = session.getCriteriaBuilder();
				CriteriaQuery<Object[]> query = builder.createQuery(Object[].class);
				Root<Product> proRoot = query.from(Product.class);
				Root<Category> cateRoot = query.from(Category.class);
				query = query.where(builder.equal(proRoot.get("category"), cateRoot.get("cid")));

				query.multiselect(cateRoot.get("cname").as(String.class), 
						builder.count(proRoot.get("id")),
						builder.min(proRoot.get("price").as(Double.class)),
						builder.max(proRoot.get("price").as(BigDecimal.class)));
				query.groupBy(cateRoot.get("cname").as(String.class));
				query.orderBy(builder.asc(cateRoot.get("cname").as(String.class)));
				
				Query<Object[]> q = session.createQuery(query);
				List<Object[]> list = q.getResultList();
				for (Object[] obj : list) {
					System.out.println(obj[0]);
					System.out.println(obj[1]);
					System.out.println(obj[2]);
					System.out.println(obj[3]);
				}
				session.close();
			}
		} catch (Exception e) {
			e.getStackTrace();
		}
	}
}
